!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.baseUrl,r=e.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.baseUrl=n,this.headers=r,this.auth=this.headers.authorization}var n,r;return n=t,r=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error getting user data: ".concat(e.status,",\n      ").concat(e.statusText))}},{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:{authorization:this.auth}}).then(this._checkResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:{authorization:this.auth}}).then(this._checkResponse)}},{key:"postUserInfo",value:function(e,t){return console.log(e,t),fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}},{key:"postUserAvatar",value:function(e){return console.log(e),fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}},{key:"postCard",value:function(e){var t=e.name,n=e.link;return console.log(t,n),fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:t,link:n})}).then(this._checkResponse)}},{key:"postLikes",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers,body:JSON.stringify({})}).then(this._checkResponse)}},{key:"deleteLikes",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers,body:JSON.stringify({})}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){var t=e.cardId;return fetch("".concat(this.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this.headers,body:JSON.stringify({})}).then(this._checkResponse)}}],r&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){var n,r,o=this,i=t.name,a=t.link,s=t.id,c=t.owner,l=t.likes,u=t.template,f=t.user,h=t.imageOpener,d=t.eraserOpener,p=t.handleLike,y=t.handleDislike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){var t=e.target,n={button:o.likeBtn,cardId:o.id};t.classList.contains("element__liked")?o.handleDislike(n):(console.log(),o.handleLike(n))},(n="likingTheCard")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this.name=i,this.link=a,this.id=s,this.owner=c,this._ownerId=this.owner._id,this.user=f,this.likes=l,this.likesAmount=this.likes.length,this.handleLike=p,this.handleDislike=y,this.template=u,this.imageOpener=h,this.eraserOpener=d,this._cardElement=this.template.querySelector(".element").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".element__image"),this.likeCounter=this._cardElement.querySelector(".element__counter"),this.eraseBtn=this._cardElement.querySelector(".element__erase"),this.likeBtn=this._cardElement.querySelector(".element__like"),this.eraseBtn.cardId=this.id}var t,r;return t=e,(r=[{key:"createCardElement",value:function(){return this._cardElement.querySelector(".element__location").textContent=this.name,this._cardImage.alt=this.name,this._cardImage.src=this.link,this.likeCounter.textContent=this.likesAmount,this.newLikesAmount="",this._setEventListeners(),this.liked=this._hasLiked(),this._toggleButtonState(),this._cardElement}},{key:"_toggleButtonState",value:function(){this.user!==this._ownerId&&(this.eraseBtn.classList.add("element__erase_disabled"),this.eraseBtn.disabled=!0)}},{key:"_hasLiked",value:function(){var e=this;this.likes.some((function(t){return t._id===e.user}))&&this.likeBtn.classList.add("element__liked")}},{key:"_setEventListeners",value:function(){var e=this;this.likeBtn.addEventListener("click",(function(t){e.likingTheCard(t)})),this.eraseBtn.addEventListener("click",this.eraserOpener),this._cardImage.addEventListener("click",(function(t){e.imageOpener(t)}))}},{key:"likeTheCard",value:function(e){e.classList.add("element__liked"),this.newLikesAmount=this.likesAmount+1}},{key:"dislikeTheCard",value:function(e){this.newLikesAmount=this.likesAmount-1,e.classList.remove("element__liked")}},{key:"newLikeNumber",value:function(e,t){e.nextElementSibling.textContent=t}},{key:"eraseTheCard",value:function(e){var t=e.selectedCard;t.remove(),t=null}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=t,this._settings=n,this._submitButton=this._form.querySelector(this._settings.submitButton),this._submitButtonDisabled=this._settings.submitButtonDisabled,this._inputSelector=this._settings.inputSelector,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._errorSelector=this._settings.errorArea,this._errorActive=this._settings.errorActive}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideError(t)}))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.classList.add(this._submitButtonDisabled),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._submitButtonDisabled),this._submitButton.disabled=!1)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_showError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._errorSelector),t.textContent=e.validationMessage,t.classList.add(this._errorActive)}},{key:"_hideError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._errorSelector),t.textContent="",t.classList.remove(this._errorActive)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector("#".concat(t)),this.selector=t,this.closeButton=this._container.querySelector("#".concat(t,"__close")),this.overlay=this._container.querySelector(".popup__overlay"),this.setEventListeners()}var t,n;return t=e,(n=[{key:"open",value:function(){this._container.classList.add("popup_active"),this._handleEscClose()}},{key:"close",value:function(){this._container.classList.remove("popup_active"),document.removeEventListener("keydown",this.escPressed)}},{key:"_handleEscClose",value:function(){var e=this;this.escPressed=function(t){"Escape"===t.key&&e.close()},document.addEventListener("keydown",this.escPressed)}},{key:"setEventListeners",value:function(){this.closeButton.addEventListener("click",this.close.bind(this)),this.overlay.addEventListener("click",this.close.bind(this))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=f(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},u.apply(this,arguments)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function h(e,t){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},h(e,t)}function d(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=p(r);if(o){var n=p(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e)).callback=t,n.submitButton=n._container.querySelector(".edit__submit-btn"),n.submitButtonText=n.submitButton.textContent,n.loadingText="Guardando...",n._inputFields=n._container.querySelectorAll(".input__form"),n.selected={},n}return t=a,(n=[{key:"close",value:function(){this._container.querySelector(".edit__form").reset(),u(p(a.prototype),"close",this).call(this)}},{key:"open",value:function(e){var t=e.target;if(u(p(a.prototype),"open",this).call(this),"erase-btn"===t.id){var n=t.closest(".element"),r=t.cardId;this.selected={selectedCard:n,cardId:r}}}},{key:"loading",value:function(e){this.submitButton.textContent=e?this.loadingText:this.submitButtonText}},{key:"setEventListeners",value:function(){var e=this;u(p(a.prototype),"setEventListeners",this).call(this),this._container.querySelector(".edit__form").addEventListener("submit",(function(t){t.preventDefault(),e.callback(e._getInputValues())}))}},{key:"_getInputValues",value:function(){var e={};return this._inputFields.forEach((function(t){e[t.name]=t.value})),e}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=_(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},m.apply(this,arguments)}function _(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function k(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e)).image=t._container.querySelector(".popup__image"),t.text=t._container.querySelector(".popup__name"),t}return t=a,(n=[{key:"open",value:function(e){m(w(a.prototype),"open",this).call(this);var t=e.target;this.image.src=t.getAttribute("src"),this.image.alt=t.getAttribute("alt"),this.text.textContent=t.getAttribute("alt")}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.job=n,this.avatarLocation=document.querySelector(".profile__pic"),this.nameLocation=document.querySelector(".profile__name"),this.jobLocation=document.querySelector(".profile__description")}var t,n;return t=e,n=[{key:"getUserInfo",value:function(){return{name:this.name,job:this.job,_id:this._id,avatar:this.avatar}}},{key:"setUserInfo",value:function(e,t,n){this.name=e,this.job=t,this._id=n,this.nameLocation.textContent=this.name,this.jobLocation.textContent=this.job}},{key:"setAvatar",value:function(e){console.log(e),this.avatar=e,this.avatarLocation.src=this.avatar}}],n&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t,n){var r=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"setItem",value:function(e){this._container.prepend(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),C=document.querySelector(".profile__edit-button"),P=document.querySelector(".profile__add-button"),I=document.querySelector(".profile__avatar-btn"),B=document.querySelector(".input__name"),A=document.querySelector(".input__description"),T=document.querySelector(".profile__name"),q=document.querySelector(".profile__description"),R=document.querySelector("#card").content;function x(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}document.querySelector(".elements");var U=new t({baseUrl:"https://around.nomoreparties.co/v1/web_es_cohort_02",headers:{authorization:"04346056-dea4-4d40-8541-43203e80bf1a","Content-Type":"application/json"}}),D={};Promise.all([U.getUserInfo(),U.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,s=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){s=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(s)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return x(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?x(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=o.name,a=o.about,s=o._id,c=o.avatar,l=r[1];console.log(),K.setAvatar(c),K.setUserInfo(i,a,s),(D=new j({data:l,renderer:function(e){e.user=K._id;var t=z(e);D.setItem(t)}},".elements")).renderItems()})).catch((function(e){console.log(e)}));var V,N={};V={submitButton:".edit__submit-btn",submitButtonDisabled:"edit__submit-btn_inactive",inputSelector:".input__form",errorArea:"input__form_type-error",errorActive:"input__form-error_active"},Array.from(document.querySelectorAll(".edit__form")).forEach((function(e){var t=new i(e,V),n=e.getAttribute("name");N[n]=t,t.enableValidation()}));var J,z=function(e){return(J=new r({name:e.name,link:e.link,id:e._id,owner:e.owner,likes:e.likes,template:R,user:e.user,imageOpener:function(e){H.open(e)},eraserOpener:function(e){$.open(e)},handleLike:function(e){var t,n,r;n=(t=e).cardId,r=t.button,console.log(n),console.log(r),U.postLikes(n).then((function(e){console.log(e.likes.length),J.likeTheCard(r);var t=e.likes.length;console.log(t),J.newLikeNumber(r,t)})).catch((function(e){console.log(e)}))},handleDislike:function(e){var t,n,r;n=(t=e).cardId,r=t.button,U.deleteLikes(n).then((function(e){J.dislikeTheCard(r);var t=e.likes.length;J.newLikeNumber(r,t)})).catch((function(e){console.log(e)}))}})).createCardElement()},H=new S("popup"),M=new y("gallery",(function(e){M.loading("loading"),U.postCard(e).then((function(e){e.owner=K.getUserInfo(),e.user=e.owner._id,e.likes=[];var t=z(e);D.setItem(t),M.close()})).catch((function(e){console.log(e)})).finally((function(){N.gallery.resetValidation(),M.loading()}))})),F=new y("edit",(function(e){var t=e.name,n=e.about;F.loading("loading"),U.postUserInfo(t,n).then((function(e){var t=e.name,n=e.about,r=e._id;K.setUserInfo(t,n,r),F.close()})).catch((function(e){console.log(e)})).finally((function(){N.edit.resetValidation(),F.loading()}))})),G=new y("avatar",(function(e){var t=e.link;G.loading("loading"),U.postUserAvatar(t).then((function(e){K.setAvatar(e.avatar),G.close()})).catch((function(e){console.log(e)})).finally((function(){N.avatar.resetValidation(),G.loading()}))})),$=new y("eraser",(function(){$.loading("loading"),U.deleteCard($.selected).then((function(){J.eraseTheCard($.selected),$.close()})).catch((function(e){console.log(e)})).finally((function(){N.eraser,$.loading()}))})),K=new E(T.textContent,q.textContent);C.addEventListener("click",(function(e){var t=K.getUserInfo();B.value=t.name,A.value=t.job,N.edit.resetValidation(),F.open(e)})),I.addEventListener("click",(function(e){N.avatar.resetValidation(),G.open(e)})),P.addEventListener("click",(function(e){N.gallery.resetValidation(),M.open(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,