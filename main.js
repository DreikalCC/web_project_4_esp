!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.baseUrl,r=e.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.baseUrl=n,this.headers=r,this.auth=this.headers.authorization}var n,r;return n=t,(r=[{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:{authorization:this.auth}}).then((function(e){return e.ok?e.json():Promise.reject("Error getting user data: ".concat(e.status,",\n        ").concat(e.statusText))})).catch((function(e){console.log(e)}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:{authorization:this.auth}}).then((function(e){return e.ok?e.json():Promise.reject("Error getting user data: ".concat(e.status,",\n      ").concat(e.statusText))})).catch((function(e){console.log(e)}))}},{key:"postUserInfo",value:function(e,t){console.log(e,t),fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t})}).catch((function(e){console.log(e)}))}},{key:"postUserAvatar",value:function(e){console.log(e),fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).catch((function(e){console.log(e)}))}},{key:"postCard",value:function(e){var t=e.name,n=e.link;console.log(t,n),fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:t,link:n})}).catch((function(e){console.log(e)}))}},{key:"postLikes",value:function(e){fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers,body:JSON.stringify({})}).catch((function(e){console.log(e)}))}},{key:"deleteLikes",value:function(e){fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers,body:JSON.stringify({})}).catch((function(e){console.log(e)}))}},{key:"deleteCard",value:function(e){var t=e.cardId;fetch("".concat(this.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this.headers,body:JSON.stringify({})}).catch((function(e){console.log(e)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){var n,r,o=this,i=t.name,a=t.link,s=t.id,c=t.owner,u=t.likes,l=t.template,f=t.user,h=t.imageOpener,d=t.eraserOpener,p=t.handleLike,y=t.handleDislike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){var t=e.target;t.classList.contains("element__liked")?(t.nextElementSibling.textContent=o.likesAmount-1,t.classList.remove("element__liked"),o.handleDislike(o.id)):(t.classList.add("element__liked"),t.nextElementSibling.textContent=o.likesAmount+1,o.newLikesAmount=o.likesAmount+1,o.handleLike(o.id))},(n="_likeTheCard")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this.name=i,this.link=a,this.id=s,this.owner=c,this._ownerId=this.owner._id,this.user=f,this.likes=u,this.likesAmount=this.likes.length,this.handleLike=p,this.handleDislike=y,this.template=l,this.imageOpener=h,this.eraserOpener=d,this._cardElement=this.template.querySelector(".element").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".element__image"),this.likeCounter=this._cardElement.querySelector(".element__counter"),this.eraseBtn=this._cardElement.querySelector(".element__erase"),this.likeBtn=this._cardElement.querySelector(".element__like"),this.eraseBtn.cardId=this.id}var t,r;return t=e,(r=[{key:"createCardElement",value:function(){return this._cardElement.querySelector(".element__location").textContent=this.name,this._cardImage.alt=this.name,this._cardImage.src=this.link,this.likeCounter.textContent=this.likesAmount,this.newLikesAmount="",this._setEventListeners(),this._hasLiked(),this._toggleButtonState(),this._cardElement}},{key:"_toggleButtonState",value:function(){this.user!==this._ownerId&&(this.eraseBtn.classList.add("element__erase_disabled"),this.eraseBtn.disabled=!0)}},{key:"_hasLiked",value:function(){var e=this;this.likes.some((function(t){return t._id===e.user}))&&this.likeBtn.classList.add("element__liked")}},{key:"_setEventListeners",value:function(){var e=this;this.likeBtn.addEventListener("click",this._likeTheCard),this.eraseBtn.addEventListener("click",this.eraserOpener),this._cardImage.addEventListener("click",(function(t){e.imageOpener(t)}))}},{key:"_eraseTheCard",value:function(e){var t=e.selectedCard;t.remove(),t=null}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=t,this._settings=n,this._submitButton=this._form.querySelector(this._settings.submitButton),this._submitButtonDisabled=this._settings.submitButtonDisabled,this._inputSelector=this._settings.inputSelector,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._errorSelector=this._settings.errorArea,this._errorActive=this._settings.errorActive}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideError(t)}))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.classList.add(this._submitButtonDisabled),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._submitButtonDisabled),this._submitButton.disabled=!1)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_showError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._errorSelector),t.textContent=e.validationMessage,t.classList.add(this._errorActive)}},{key:"_hideError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._errorSelector),t.textContent="",t.classList.remove(this._errorActive)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector("#".concat(t)),this.selector=t,this.closeButton=this._container.querySelector("#".concat(t,"__close")),this.overlay=this._container.querySelector(".popup__overlay"),this.setEventListeners()}var t,n;return t=e,(n=[{key:"open",value:function(){this._container.classList.add("popup_active"),this._handleEscClose()}},{key:"close",value:function(){this._container.classList.remove("popup_active"),document.removeEventListener("keydown",this.escPressed)}},{key:"_handleEscClose",value:function(){var e=this;this.escPressed=function(t){"Escape"===t.key&&e.close()},document.addEventListener("keydown",this.escPressed)}},{key:"setEventListeners",value:function(){this.closeButton.addEventListener("click",this.close.bind(this)),this.overlay.addEventListener("click",this.close.bind(this))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=f(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},l.apply(this,arguments)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function h(e,t){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},h(e,t)}function d(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=p(r);if(o){var n=p(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e)).callback=t,n.submitButton=n._container.querySelector(".edit__submit-btn"),n.submitButtonText=n.submitButton.textContent,n.loadingText="Guardando...",n._inputFields=n._container.querySelectorAll(".input__form"),n.selected={},n}return t=a,(n=[{key:"close",value:function(){this._container.querySelector(".edit__form").reset(),l(p(a.prototype),"close",this).call(this)}},{key:"open",value:function(e){var t=e.target;if(l(p(a.prototype),"open",this).call(this),"erase-btn"===t.id){var n=t.closest(".element"),r=t.cardId;this.selected={selectedCard:n,cardId:r}}}},{key:"loading",value:function(e){this.submitButton.textContent=e?this.loadingText:this.submitButtonText}},{key:"setEventListeners",value:function(){var e=this;l(p(a.prototype),"setEventListeners",this).call(this),this._container.querySelector(".edit__form").addEventListener("submit",(function(t){t.preventDefault(),e.callback(e._getInputValues())}))}},{key:"_getInputValues",value:function(){var e={};return this._inputFields.forEach((function(t){e[t.name]=t.value})),e}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=_(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function _(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function k(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e)).image=t._container.querySelector(".popup__image"),t.text=t._container.querySelector(".popup__name"),t}return t=a,(n=[{key:"open",value:function(e){b(w(a.prototype),"open",this).call(this);var t=e.target;this.image.src=t.getAttribute("src"),this.image.alt=t.getAttribute("alt"),this.text.textContent=t.getAttribute("alt")}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.job=n,this.avatarLocation=document.querySelector(".profile__pic"),this.nameLocation=document.querySelector(".profile__name"),this.jobLocation=document.querySelector(".profile__description")}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this.name,job:this.job,_id:this._id,avatar:this.avatar}}},{key:"setUserInfo",value:function(e,t,n){this.name=e,this.job=t,this._id=n,this.nameLocation.textContent=this.name,this.jobLocation.textContent=this.job}},{key:"setAvatar",value:function(e){this.avatar=e,this.avatarLocation.src=this.avatar}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t,n){var r=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"setItem",value:function(e){this._container.prepend(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),P=document.querySelector(".profile__edit-button"),C=document.querySelector(".profile__add-button"),I=document.querySelector(".profile__avatar-btn"),B=document.querySelector(".input__name"),A=document.querySelector(".input__description"),T=document.querySelector(".profile__name"),q=document.querySelector(".profile__description"),x=document.querySelector("#card").content;function U(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}document.querySelector(".elements");var R=new t({baseUrl:"https://around.nomoreparties.co/v1/web_es_cohort_02",headers:{authorization:"04346056-dea4-4d40-8541-43203e80bf1a","Content-Type":"application/json"}}),D={};Promise.all([R.getUserInfo(),R.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,s=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){s=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(s)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return U(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?U(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=o.name,a=o.about,s=o._id,c=o.avatar,u=r[1];K.setAvatar(c),K.setUserInfo(i,a,s),K.getUserInfo(),(D=new j({data:u,renderer:function(e){e.user=K._id;var t=z(e);D.setItem(t)}},".elements")).renderItems()}));var V,N={};V={submitButton:".edit__submit-btn",submitButtonDisabled:"edit__submit-btn_inactive",inputSelector:".input__form",errorArea:"input__form_type-error",errorActive:"input__form-error_active"},Array.from(document.querySelectorAll(".edit__form")).forEach((function(e){var t=new i(e,V),n=e.getAttribute("name");N[n]=t,t.enableValidation()}));var J,z=function(e){return(J=new r({name:e.name,link:e.link,id:e._id,owner:e.owner,likes:e.likes,template:x,user:e.user,imageOpener:function(e){H.open(e)},eraserOpener:function(e){$.open(e)},handleLike:function(e){var t;t=e,R.postLikes(t)},handleDislike:function(e){var t;t=e,R.deleteLikes(t)}})).createCardElement()},H=new S("popup"),M=new y("gallery",(function(e){M.loading("loading"),e.owner=K.getUserInfo(),e.user=e.owner._id,e.likes=[];var t=z(e);D.setItem(t),R.postCard(e),setTimeout((function(){M.close(),M.loading()}),500)})),F=new y("edit",(function(e){var t=e.name,n=e.desc;F.loading("loading"),R.postUserInfo(t,n),K.setUserInfo(t,n),N.edit.resetValidation(),setTimeout((function(){F.close(),F.loading()}),500)})),G=new y("avatar",(function(e){var t=e.link;G.loading("loading"),R.postUserAvatar(t),K.setAvatar(t),setTimeout((function(){G.close(),G.loading()}),500)})),$=new y("eraser",(function(){$.loading("loading"),R.deleteCard($.selected),J._eraseTheCard($.selected),setTimeout((function(){$.close(),$.loading()}),500)})),K=new O(T.textContent,q.textContent);P.addEventListener("click",(function(e){var t=K.getUserInfo();B.value=t.name,A.value=t.job,N.edit.resetValidation(),F.open(e)})),I.addEventListener("click",(function(e){N.avatar.resetValidation(),G.open(e)})),C.addEventListener("click",(function(e){N.gallery.resetValidation(),M.open(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QnpFLFFBQ2hCeUUsRUFBZ0I5RCxTQUNsQixHQUFHLElBQ0wsSUEwRGFpRSxFQUFpQixJQUFJMUUsRUFBZSxVQXhEZixTQUFILEdBQWMsSUFBVHpGLEVBQUksRUFBSkEsS0FFbENtSyxFQUFlakUsUUFBUSxXQUN2QmlDLEVBQUlpQyxlQUFlcEssR0FDbkJ5SSxFQUFZQyxVQUFVMUksR0FDdEIrSixZQUFZLFdBQ1ZJLEVBQWU1RSxRQUNmNEUsRUFBZWpFLFNBQ2pCLEdBQUcsSUFDTCxJQWlEYXNELEVBQWUsSUFBSS9ELEVBQWUsVUEvQ3BCLFdBQ3pCK0QsRUFBYXRELFFBQVEsV0FDckJpQyxFQUFJa0MsV0FBV2IsRUFBYTFELFVBQzVCdUQsRUFBS2lCLGNBQWNkLEVBQWExRCxVQUNoQ2lFLFlBQVksV0FDVlAsRUFBYWpFLFFBQ2JpRSxFQUFhdEQsU0FDZixHQUFHLElBQ0wsSUF5Q2F1QyxFQUFjLElBQUk5QixFQUFVb0IsRUFBTzVHLFlBQWE2RyxFQUFLN0csYUFHaEV1RyxFQUFXaEYsaUJBQWlCLFNBQVMsU0FBQzdCLEdBQ3BDLElBQU0wSixFQUFXOUIsRUFBWUgsY0FFN0JULEVBQVF2QixNQUFRaUUsRUFBUzdLLEtBQ3pCb0ksRUFBUXhCLE1BQVFpRSxFQUFTM0QsSUFDekJvQyxFQUFxQixLQUFFa0Isa0JBQ3ZCRixFQUFnQlQsS0FBSzFJLEVBQ3ZCLElBRUErRyxFQUFhbEYsaUJBQWlCLFNBQVMsU0FBQzdCLEdBRXRDbUksRUFBdUIsT0FBRWtCLGtCQUN6QkMsRUFBZVosS0FBSzFJLEVBQ3RCLElBRUE4RyxFQUFVakYsaUJBQWlCLFNBQVMsU0FBQzdCLEdBRW5DbUksRUFBd0IsUUFBRWtCLGtCQUMxQk4sRUFBWUwsS0FBSzFJLEVBQ25CLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcHJpbnRfOC8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9zcHJpbnRfOC8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vc3ByaW50XzgvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3NwcmludF84Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vc3ByaW50XzgvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3NwcmludF84Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vc3ByaW50XzgvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9zcHJpbnRfOC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vc3ByaW50XzgvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3NwcmludF84Ly4vc3JjL3BhZ2UvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3Ioe2Jhc2VVcmwsIGhlYWRlcnN9KXtcbiAgICB0aGlzLmJhc2VVcmwgPSBiYXNlVXJsO1xuICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XG4gICAgdGhpcy5hdXRoID0gdGhpcy5oZWFkZXJzLmF1dGhvcml6YXRpb247XG4gIH1cblxuICBnZXRJbml0aWFsQ2FyZHMgKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLmF1dGhcbiAgICAgIH1cbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3IgZ2V0dGluZyB1c2VyIGRhdGE6ICR7cmVzLnN0YXR1c30sXG4gICAgICAgICR7cmVzLnN0YXR1c1RleHR9YCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpPT57Y29uc29sZS5sb2coZXJyKX0pXG4gIH1cblxuICBnZXRVc2VySW5mbyAoKXtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5hdXRoXG4gICAgICB9XG4gICAgfSlcbiAgICAudGhlbihyZXMgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3IgZ2V0dGluZyB1c2VyIGRhdGE6ICR7cmVzLnN0YXR1c30sXG4gICAgICAke3Jlcy5zdGF0dXNUZXh0fWApO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpPT57Y29uc29sZS5sb2coZXJyKX0pXG4gIH1cblxuICBwb3N0VXNlckluZm8obmFtZSwgYWJvdXQpe1xuICAgIGNvbnNvbGUubG9nKG5hbWUsIGFib3V0KVxuICAgIGZldGNoKGAke3RoaXMuYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgYWJvdXQ6IGFib3V0XG4gICAgICB9KVxuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpPT57Y29uc29sZS5sb2coZXJyKX0pXG4gIH1cblxuICBwb3N0VXNlckF2YXRhcihsaW5rKXtcbiAgICBjb25zb2xlLmxvZyhsaW5rKVxuICAgIGZldGNoKGAke3RoaXMuYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcjogbGlua1xuICAgICAgfSlcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKT0+e2NvbnNvbGUubG9nKGVycil9KVxuICB9XG5cbiAgcG9zdENhcmQoe25hbWUsbGlua30pe1xuICAgIGNvbnNvbGUubG9nKG5hbWUsIGxpbmspXG4gICAgZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgIGxpbms6IGxpbmtcbiAgICAgIH0pXG4gICAgfSlcbiAgICAuY2F0Y2goKGVycik9Pntjb25zb2xlLmxvZyhlcnIpfSlcbiAgfVxuXG4gIHBvc3RMaWtlcyhjYXJkSWQpe1xuICAgIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe30pXG4gICAgfSlcbiAgICAuY2F0Y2goKGVycik9Pntjb25zb2xlLmxvZyhlcnIpfSlcbiAgfVxuXG4gIGRlbGV0ZUxpa2VzKGNhcmRJZCl7XG4gICAgZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7fSlcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKT0+e2NvbnNvbGUubG9nKGVycil9KVxuICB9XG5cbiAgZGVsZXRlQ2FyZCh7Y2FyZElkfSl7XG4gICAgZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7fSlcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKT0+e2NvbnNvbGUubG9nKGVycil9KVxuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKHtuYW1lLCBsaW5rLCBpZCwgb3duZXIsIGxpa2VzLCB0ZW1wbGF0ZSwgdXNlciwgaW1hZ2VPcGVuZXIsIGVyYXNlck9wZW5lciwgaGFuZGxlTGlrZSwgaGFuZGxlRGlzbGlrZX0pe1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5saW5rID0gbGluaztcbiAgICB0aGlzLmlkID0gaWQ7XG4gICAgdGhpcy5vd25lcj0gb3duZXI7XG4gICAgdGhpcy5fb3duZXJJZCA9IHRoaXMub3duZXIuX2lkO1xuICAgIHRoaXMudXNlciA9IHVzZXI7XG4gICAgdGhpcy5saWtlcyA9IGxpa2VzO1xuICAgIHRoaXMubGlrZXNBbW91bnQgPSB0aGlzLmxpa2VzLmxlbmd0aDtcbiAgICB0aGlzLmhhbmRsZUxpa2UgPSBoYW5kbGVMaWtlO1xuICAgIHRoaXMuaGFuZGxlRGlzbGlrZSA9IGhhbmRsZURpc2xpa2U7XG4gICAgdGhpcy50ZW1wbGF0ZSA9IHRlbXBsYXRlO1xuICAgIHRoaXMuaW1hZ2VPcGVuZXIgPSBpbWFnZU9wZW5lcjtcbiAgICB0aGlzLmVyYXNlck9wZW5lcj0gZXJhc2VyT3BlbmVyO1xuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gdGhpcy50ZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRcIikuY2xvbmVOb2RlKHRydWUpO1xuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9faW1hZ2VcIik7XG4gICAgdGhpcy5saWtlQ291bnRlciA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fY291bnRlclwiKTtcbiAgICB0aGlzLmVyYXNlQnRuID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19lcmFzZVwiKTtcbiAgICB0aGlzLmxpa2VCdG4gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2xpa2VcIik7XG4gICAgdGhpcy5lcmFzZUJ0bi5jYXJkSWQgPSB0aGlzLmlkO1xuICB9XG5cbiAgY3JlYXRlQ2FyZEVsZW1lbnQgKCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fbG9jYXRpb25cIikudGV4dENvbnRlbnQgPSB0aGlzLm5hbWU7XG4gICAgdGhpcy5fY2FyZEltYWdlLmFsdCA9IHRoaXMubmFtZTtcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5saW5rO1xuICAgIHRoaXMubGlrZUNvdW50ZXIudGV4dENvbnRlbnQgPSB0aGlzLmxpa2VzQW1vdW50O1xuICAgIHRoaXMubmV3TGlrZXNBbW91bnQgPSBcIlwiO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5faGFzTGlrZWQoKTtcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcbiAgfVxuXG4gIF90b2dnbGVCdXR0b25TdGF0ZSAoKSB7XG4gICAgaWYgKHRoaXMudXNlciAhPT0gdGhpcy5fb3duZXJJZCl7XG4gICAgICB0aGlzLmVyYXNlQnRuLmNsYXNzTGlzdC5hZGQoXCJlbGVtZW50X19lcmFzZV9kaXNhYmxlZFwiKTtcbiAgICAgIHRoaXMuZXJhc2VCdG4uZGlzYWJsZWQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIF9oYXNMaWtlZCAoKSB7XG4gICAgaWYgKHRoaXMubGlrZXMuc29tZShlPT5lLl9pZCA9PT0gdGhpcy51c2VyKSl7XG4gICAgICB0aGlzLmxpa2VCdG4uY2xhc3NMaXN0LmFkZChcImVsZW1lbnRfX2xpa2VkXCIpXG4gICAgfVxuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzICgpIHtcbiAgICB0aGlzLmxpa2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2xpa2VUaGVDYXJkKTtcbiAgICB0aGlzLmVyYXNlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmVyYXNlck9wZW5lcik7XG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KT0+e3RoaXMuaW1hZ2VPcGVuZXIoZXZ0KTt9KVxuICB9XG5cbiAgX2xpa2VUaGVDYXJkID0gKGV2dCkgPT4ge1xuICAgIGNvbnN0IF9saWtlQnV0dG9uID0gZXZ0LnRhcmdldDtcbiAgICBpZihfbGlrZUJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoXCJlbGVtZW50X19saWtlZFwiKSl7XG4gICAgICBfbGlrZUJ1dHRvbi5uZXh0RWxlbWVudFNpYmxpbmcudGV4dENvbnRlbnQgPSB0aGlzLmxpa2VzQW1vdW50LTE7XG4gICAgICBfbGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwiZWxlbWVudF9fbGlrZWRcIik7XG4gICAgICB0aGlzLmhhbmRsZURpc2xpa2UodGhpcy5pZCk7XG4gICAgfVxuICAgIGVsc2V7XG4gICAgICBfbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiZWxlbWVudF9fbGlrZWRcIik7XG4gICAgICBfbGlrZUJ1dHRvbi5uZXh0RWxlbWVudFNpYmxpbmcudGV4dENvbnRlbnQgPSB0aGlzLmxpa2VzQW1vdW50KzE7XG4gICAgICB0aGlzLm5ld0xpa2VzQW1vdW50ID0gdGhpcy5saWtlc0Ftb3VudCsxO1xuICAgICAgdGhpcy5oYW5kbGVMaWtlKHRoaXMuaWQpO1xuICAgIH1cbiAgfVxuXG4gIF9lcmFzZVRoZUNhcmQgICh7c2VsZWN0ZWRDYXJkfSkgIHtcbiAgICBzZWxlY3RlZENhcmQucmVtb3ZlKCk7XG4gICAgc2VsZWN0ZWRDYXJkID0gbnVsbFxuICB9XG5cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9ye1xuICBjb25zdHJ1Y3Rvcihmb3JtLCBzZXR0aW5ncyl7XG4gICAgdGhpcy5fZm9ybSA9IGZvcm07XG4gICAgdGhpcy5fc2V0dGluZ3MgPSBzZXR0aW5ncztcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc2V0dGluZ3Muc3VibWl0QnV0dG9uKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25EaXNhYmxlZCA9IHRoaXMuX3NldHRpbmdzLnN1Ym1pdEJ1dHRvbkRpc2FibGVkO1xuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSB0aGlzLl9zZXR0aW5ncy5pbnB1dFNlbGVjdG9yO1xuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20odGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpKTtcbiAgICB0aGlzLl9lcnJvclNlbGVjdG9yID0gdGhpcy5fc2V0dGluZ3MuZXJyb3JBcmVhO1xuICAgIHRoaXMuX2Vycm9yQWN0aXZlID0gdGhpcy5fc2V0dGluZ3MuZXJyb3JBY3RpdmU7XG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uICgpIHtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCk9PntldnQucHJldmVudERlZmF1bHQoKTt9KTtcbiAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgfVxuXG4gIHJlc2V0VmFsaWRhdGlvbiAoKSB7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICB0aGlzLl9oaWRlRXJyb3IoaW5wdXRFbGVtZW50KX1cbiAgICApO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzICgpIHtcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge3RoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xuICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTt9KVxuICAgIH0pXG4gIH1cblxuICBfdG9nZ2xlQnV0dG9uU3RhdGUgKCkge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSl7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9zdWJtaXRCdXR0b25EaXNhYmxlZCk7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9zdWJtaXRCdXR0b25EaXNhYmxlZCk7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBfaGFzSW52YWxpZElucHV0ICgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH1cblxuICBfY2hlY2tJbnB1dFZhbGlkaXR5IChpbnB1dEVsZW1lbnQpIHtcbiAgICBpZighaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKXtcbiAgICAgIHRoaXMuX3Nob3dFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH1cbiAgICBlbHNle1xuICAgICAgdGhpcy5faGlkZUVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfVxuICB9XG5cbiAgX3Nob3dFcnJvciAoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgZm9ybUVycm9yU3BhbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yU2VsZWN0b3IpO1xuICAgIGZvcm1FcnJvclNwYW4udGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XG4gICAgZm9ybUVycm9yU3Bhbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQWN0aXZlKTtcbiAgfVxuXG4gIF9oaWRlRXJyb3IgKGlucHV0RWxlbWVudCkge1xuICAgIGNvbnN0IGZvcm1FcnJvclNwYW4gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvclNlbGVjdG9yKTtcbiAgICBmb3JtRXJyb3JTcGFuLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICBmb3JtRXJyb3JTcGFuLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JBY3RpdmUpO1xuICB9XG5cblxufVxuIiwiZXhwb3J0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke3BvcHVwU2VsZWN0b3J9YCk7XG4gICAgdGhpcy5zZWxlY3RvciA9IHBvcHVwU2VsZWN0b3I7XG4gICAgdGhpcy5jbG9zZUJ1dHRvbiA9IHRoaXMuX2NvbnRhaW5lci5xdWVyeVNlbGVjdG9yKGAjJHtwb3B1cFNlbGVjdG9yfV9fY2xvc2VgKTtcbiAgICB0aGlzLm92ZXJsYXkgPSB0aGlzLl9jb250YWluZXIucXVlcnlTZWxlY3RvcignLnBvcHVwX19vdmVybGF5Jyk7XG4gICAgdGhpcy5zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgb3BlbiAgKCkgIHtcbiAgICB0aGlzLl9jb250YWluZXIuY2xhc3NMaXN0LmFkZChcInBvcHVwX2FjdGl2ZVwiKTtcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSgpO1xuICB9XG5cbiAgY2xvc2UgKCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfYWN0aXZlXCIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuZXNjUHJlc3NlZClcbiAgfVxuXG4gIF9oYW5kbGVFc2NDbG9zZSAgKCkgIHtcbiAgICB0aGlzLmVzY1ByZXNzZWQgPSAoZXZ0KSA9PiB7XG4gICAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIil7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5lc2NQcmVzc2VkKVxuXG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycyAgKCkgIHtcbiAgICB0aGlzLmNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmNsb3NlLmJpbmQodGhpcykpO1xuICAgIHRoaXMub3ZlcmxheS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5jbG9zZS5iaW5kKHRoaXMpKTtcbiAgfVxufSIsImltcG9ydCB7UG9wdXB9IGZyb20gXCIuL1BvcHVwLmpzXCJcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgY2FsbGJhY2spIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgdGhpcy5zdWJtaXRCdXR0b24gPSB0aGlzLl9jb250YWluZXIucXVlcnlTZWxlY3RvcihcIi5lZGl0X19zdWJtaXQtYnRuXCIpO1xuICAgIHRoaXMuc3VibWl0QnV0dG9uVGV4dCA9IHRoaXMuc3VibWl0QnV0dG9uLnRleHRDb250ZW50O1xuICAgIHRoaXMubG9hZGluZ1RleHQgPSBcIkd1YXJkYW5kby4uLlwiO1xuICAgIHRoaXMuX2lucHV0RmllbGRzID0gdGhpcy5fY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuaW5wdXRfX2Zvcm1cIik7XG4gICAgdGhpcy5zZWxlY3RlZCA9IHt9O1xuICB9XG5cbiAgY2xvc2UgKCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiLmVkaXRfX2Zvcm1cIikucmVzZXQoKTtcbiAgICBzdXBlci5jbG9zZSgpO1xuICB9XG5cbiAgb3BlbiAoZXZ0KSB7XG4gICAgY29uc3QgYnV0dG9uID0gZXZ0LnRhcmdldDtcbiAgICBzdXBlci5vcGVuKCk7XG4gICAgaWYoYnV0dG9uLmlkID09PSBcImVyYXNlLWJ0blwiKXtcbiAgICAgIGNvbnN0IHNlbGVjdGVkQ2FyZCA9IGJ1dHRvbi5jbG9zZXN0KFwiLmVsZW1lbnRcIik7XG4gICAgICBjb25zdCBjYXJkSWQgPSBidXR0b24uY2FyZElkXG4gICAgICB0aGlzLnNlbGVjdGVkID0ge3NlbGVjdGVkQ2FyZCwgY2FyZElkfTtcbiAgICB9XG4gIH1cblxuICBsb2FkaW5nKGxvYWRpbmcpe1xuICAgIGlmKGxvYWRpbmcpe1xuICAgICAgdGhpcy5zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLmxvYWRpbmdUZXh0O1xuICAgIH1lbHNle1xuICAgICAgdGhpcy5zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLnN1Ym1pdEJ1dHRvblRleHQ7XG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMgICgpICB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9jb250YWluZXIucXVlcnlTZWxlY3RvcihcIi5lZGl0X19mb3JtXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuY2FsbGJhY2sodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XG4gICAgfSk7XG4gIH1cblxuICAgIF9nZXRJbnB1dFZhbHVlcyAoKSB7XG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcbiAgICB0aGlzLl9pbnB1dEZpZWxkcy5mb3JFYWNoKGZpZWxkID0+IHtpbnB1dFZhbHVlc1tmaWVsZC5uYW1lXSA9IGZpZWxkLnZhbHVlO30gKTtcbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XG4gIH1cbn0iLCJpbXBvcnQge1BvcHVwfSBmcm9tIFwiLi9Qb3B1cC5qc1wiXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5pbWFnZSA9IHRoaXMuX2NvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlJyk7XG4gICAgdGhpcy50ZXh0ID0gdGhpcy5fY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fbmFtZScpO1xuICB9XG5cbiAgb3BlbiAoZXZ0KSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIGNvbnN0IGltYWdlID0gZXZ0LnRhcmdldDtcbiAgICB0aGlzLmltYWdlLnNyYyA9IGltYWdlLmdldEF0dHJpYnV0ZShcInNyY1wiKTtcbiAgICB0aGlzLmltYWdlLmFsdCA9IGltYWdlLmdldEF0dHJpYnV0ZShcImFsdFwiKTtcbiAgICB0aGlzLnRleHQudGV4dENvbnRlbnQgPSBpbWFnZS5nZXRBdHRyaWJ1dGUoXCJhbHRcIik7XG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIGpvYil7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLmpvYiA9IGpvYjtcbiAgICB0aGlzLmF2YXRhckxvY2F0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19waWNcIik7XG4gICAgdGhpcy5uYW1lTG9jYXRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX25hbWVcIik7XG4gICAgdGhpcy5qb2JMb2NhdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIik7XG4gIH1cblxuICBnZXRVc2VySW5mbyAoKSB7XG4gICAgY29uc3QgdXNlckluZm8gPSB7XG4gICAgICBuYW1lIDogdGhpcy5uYW1lLFxuICAgICAgam9iIDogdGhpcy5qb2IsXG4gICAgICBfaWQ6IHRoaXMuX2lkLFxuICAgICAgYXZhdGFyOiB0aGlzLmF2YXRhcixcbiAgICB9XG4gICAgcmV0dXJuIHVzZXJJbmZvXG4gIH1cblxuICBzZXRVc2VySW5mbyAobmFtZSxhYm91dCxfaWQpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMuam9iID0gYWJvdXQ7XG4gICAgdGhpcy5faWQgPSBfaWQ7XG4gICAgdGhpcy5uYW1lTG9jYXRpb24udGV4dENvbnRlbnQgPSB0aGlzLm5hbWU7XG4gICAgdGhpcy5qb2JMb2NhdGlvbi50ZXh0Q29udGVudCA9IHRoaXMuam9iO1xuICB9XG5cbiAgc2V0QXZhdGFyIChhdmF0YXIpe1xuICAgIHRoaXMuYXZhdGFyID0gYXZhdGFyO1xuICAgIHRoaXMuYXZhdGFyTG9jYXRpb24uc3JjID0gdGhpcy5hdmF0YXI7XG4gIH1cblxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGRhdGEsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcmVuZGVyZWRJdGVtcyA9IGRhdGE7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIHNldEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5fY29udGFpbmVyLmlubmVySFRNTCA9IFwiXCI7XG4gIH1cblxuICByZW5kZXJJdGVtcygpIHtcbiAgICB0aGlzLl9yZW5kZXJlZEl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pXG4gICAgfSk7XG5cbiAgfVxufSIsImV4cG9ydCBjb25zdCBlZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2VkaXQtYnV0dG9uJyk7XG5leHBvcnQgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1idXR0b24nKTtcbmV4cG9ydCBjb25zdCBhdmF0YXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyLWJ0bicpO1xuXG5leHBvcnQgY29uc3QgbmV3TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaW5wdXRfX25hbWVcIik7XG5leHBvcnQgY29uc3QgbmV3RGVzYyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaW5wdXRfX2Rlc2NyaXB0aW9uXCIpO1xuXG5leHBvcnQgY29uc3QgcGVyc29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19uYW1lXCIpO1xuZXhwb3J0IGNvbnN0IGRlc2MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIpO1xuXG5leHBvcnQgY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkXCIpLmNvbnRlbnQ7XG5leHBvcnQgY29uc3QgY2FyZEFyZWEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzXCIpO1xuXG5leHBvcnQgY29uc3Qgc2V0dGluZ3MgPSB7XG4gIHN1Ym1pdEJ1dHRvbjogXCIuZWRpdF9fc3VibWl0LWJ0blwiLFxuICBzdWJtaXRCdXR0b25EaXNhYmxlZDogXCJlZGl0X19zdWJtaXQtYnRuX2luYWN0aXZlXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLmlucHV0X19mb3JtXCIsXG4gIGVycm9yQXJlYTogXCJpbnB1dF9fZm9ybV90eXBlLWVycm9yXCIsXG4gIGVycm9yQWN0aXZlOiBcImlucHV0X19mb3JtLWVycm9yX2FjdGl2ZVwiXG59O1xuXG5cbmV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXG4gIHtcbiAgICBuYW1lOiBcIlZhbGxlIGRlIFlvc2VtaXRlXCIsXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS95b3NlbWl0ZS5qcGdcIlxuICB9LFxuICB7XG4gICAgbmFtZTogXCJMYWdvIExvdWlzZVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFrZS1sb3Vpc2UuanBnXCJcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTW9udGHDsWFzIENhbHZhc1wiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvYmFsZC1tb3VudGFpbnMuanBnXCJcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGF0ZW1hci5qcGdcIlxuICB9LFxuICB7XG4gICAgbmFtZTogXCJQYXJxdWUgTmFjaW9uYWwgZGUgbGEgVmFub2lzZVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvdmFub2lzZS5qcGdcIlxuICB9LFxuICB7XG4gICAgbmFtZTogXCJMYWdvIGRpIEJyYWllc1wiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFnby5qcGdcIlxuICB9XG5dO1xuXG4iLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuaW1wb3J0IHByb2ZpbGVTcmMgZnJvbSBcIi4uL2ltYWdlcy9qYWNrLmpwZ1wiO1xuaW1wb3J0IHVuZGVybGluZVNyYyBmcm9tIFwiLi4vaW1hZ2VzL0xpbmUucG5nXCI7XG5pbXBvcnQgYXJvdW5kU3JjIGZyb20gXCIuLi9pbWFnZXMvVmVjdG9yLnBuZ1wiO1xuXG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcbmltcG9ydCB7c2V0dGluZ3MgLGNhcmRUZW1wbGF0ZSwgZWRpdEJ1dHRvbiwgYWRkQnV0dG9uLCBhdmF0YXJCdXR0b24sIG5ld05hbWUsIG5ld0Rlc2MsIHBlcnNvbiwgZGVzYywgY2FyZEFyZWEsIGluaXRpYWxDYXJkcyB9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIlxuXG5cblxuXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL3dlYl9lc19jb2hvcnRfMDJcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiMDQzNDYwNTYtZGVhNC00ZDQwLTg1NDEtNDMyMDNlODBiZjFhXCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgfVxufSk7XG5cbmxldCBpbml0aWFsQ2FyZCA9IHt9O1xuXG5Qcm9taXNlLmFsbChbYXBpLmdldFVzZXJJbmZvKCksYXBpLmdldEluaXRpYWxDYXJkcygpXSlcbi50aGVuKChbe25hbWUsYWJvdXQsX2lkLGF2YXRhcn0sY2FyZHNdKT0+e1xuICB1c2VyUHJvZmlsZS5zZXRBdmF0YXIoYXZhdGFyKVxuICB1c2VyUHJvZmlsZS5zZXRVc2VySW5mbyhuYW1lLGFib3V0LF9pZClcbiAgdXNlclByb2ZpbGUuZ2V0VXNlckluZm8oKTtcblxuICBpbml0aWFsQ2FyZCA9IG5ldyBTZWN0aW9uICh7XG4gICAgZGF0YTogY2FyZHMsXG4gICAgcmVuZGVyZXI6IChkYXRhKSA9PiB7XG4gICAgICBkYXRhLnVzZXIgPSB1c2VyUHJvZmlsZS5faWQ7XG4gICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGNyZWF0ZUNhcmQoZGF0YSk7XG4gICAgICBpbml0aWFsQ2FyZC5zZXRJdGVtKGNhcmRFbGVtZW50KTtcbiAgICB9XG4gIH0sXG4gIFwiLmVsZW1lbnRzXCJcbiAgKTtcbiAgaW5pdGlhbENhcmQucmVuZGVySXRlbXMoKVxufSlcblxuXG5cblxuXG5jb25zdCBmb3JtVmFsaWRhdG9ycyA9IHt9O1xuXG5jb25zdCBlbmFibGVWYWxpZGF0aW9uID0gKHNldHRpbmdzKSA9PiB7XG4gIGNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmVkaXRfX2Zvcm1cIikpO1xuICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xuICAgIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1FbGVtZW50LCBzZXR0aW5ncyk7XG4gICAgY29uc3QgZm9ybU5hbWUgPSBmb3JtRWxlbWVudC5nZXRBdHRyaWJ1dGUoJ25hbWUnKTtcbiAgICBmb3JtVmFsaWRhdG9yc1tmb3JtTmFtZV0gPSB2YWxpZGF0b3I7XG4gICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuICB9KTtcbn07XG5cbmVuYWJsZVZhbGlkYXRpb24oc2V0dGluZ3MpO1xuXG5leHBvcnQgY29uc3QgaGFuZGxlU3VibWl0Q2FyZCA9IChpbmZvKT0+e1xuICBhZGRDYXJkRm9ybS5sb2FkaW5nKCdsb2FkaW5nJyk7XG4gIGluZm8ub3duZXIgPSB1c2VyUHJvZmlsZS5nZXRVc2VySW5mbygpO1xuICBpbmZvLnVzZXIgPSBpbmZvLm93bmVyLl9pZDtcbiAgaW5mby5saWtlcyA9IFtdO1xuICBjb25zdCBjYXJkRWxlbWVudCA9IGNyZWF0ZUNhcmQoaW5mbyk7XG4gIGluaXRpYWxDYXJkLnNldEl0ZW0oY2FyZEVsZW1lbnQpO1xuICBhcGkucG9zdENhcmQoaW5mbyk7XG4gIHNldFRpbWVvdXQoKCgpPT57XG4gICAgYWRkQ2FyZEZvcm0uY2xvc2UoKTtcbiAgICBhZGRDYXJkRm9ybS5sb2FkaW5nKCk7XG4gIH0pLDUwMCk7XG59XG5cbmV4cG9ydCBjb25zdCBoYW5kbGVTdWJtaXRQcm9maWxlID0gKHtuYW1lLCBkZXNjfSkgPT57XG4gIHByb2ZpbGVGb3JtRWRpdC5sb2FkaW5nKCdsb2FkaW5nJyk7XG4gIGFwaS5wb3N0VXNlckluZm8obmFtZSwgZGVzYyk7XG4gIHVzZXJQcm9maWxlLnNldFVzZXJJbmZvKG5hbWUsIGRlc2MpO1xuICBmb3JtVmFsaWRhdG9yc1snZWRpdCddLnJlc2V0VmFsaWRhdGlvbigpO1xuICBzZXRUaW1lb3V0KCgoKT0+e1xuICAgIHByb2ZpbGVGb3JtRWRpdC5jbG9zZSgpO1xuICAgIHByb2ZpbGVGb3JtRWRpdC5sb2FkaW5nKCk7XG4gIH0pLDUwMCk7XG59O1xuXG5leHBvcnQgY29uc3QgaGFuZGxlU3VibWl0QXZhdGFyID0gKHtsaW5rfSkgPT57XG5cbiAgYXZhdGFyRm9ybUVkaXQubG9hZGluZygnbG9hZGluZycpO1xuICBhcGkucG9zdFVzZXJBdmF0YXIobGluayk7XG4gIHVzZXJQcm9maWxlLnNldEF2YXRhcihsaW5rKTtcbiAgc2V0VGltZW91dCgoKCk9PntcbiAgICBhdmF0YXJGb3JtRWRpdC5jbG9zZSgpO1xuICAgIGF2YXRhckZvcm1FZGl0LmxvYWRpbmcoKTtcbiAgfSksNTAwKTtcbn07XG5cbmV4cG9ydCBjb25zdCBoYW5kbGVFcmFzZSA9ICgpPT57XG4gIGNvbmZpcm1FcmFzZS5sb2FkaW5nKCdsb2FkaW5nJyk7XG4gIGFwaS5kZWxldGVDYXJkKGNvbmZpcm1FcmFzZS5zZWxlY3RlZCk7XG4gIGNhcmQuX2VyYXNlVGhlQ2FyZChjb25maXJtRXJhc2Uuc2VsZWN0ZWQpO1xuICBzZXRUaW1lb3V0KCgoKT0+e1xuICAgIGNvbmZpcm1FcmFzZS5jbG9zZSgpO1xuICAgIGNvbmZpcm1FcmFzZS5sb2FkaW5nKCk7XG4gIH0pLDUwMCk7XG59O1xuXG5leHBvcnQgY29uc3QgaGFuZGxlTGlrZSA9KGNhcmRJZCkgPT4ge1xuICBhcGkucG9zdExpa2VzKGNhcmRJZCk7XG59O1xuXG5leHBvcnQgY29uc3QgaGFuZGxlRGlzbGlrZSA9KGNhcmRJZCkgPT4ge1xuICBhcGkuZGVsZXRlTGlrZXMoY2FyZElkKTtcbn07XG5cblxubGV0IGNhcmQ7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVDYXJkID0gKGRhdGEpID0+IHtcbiAgIGNhcmQgPSBuZXcgQ2FyZCAoe1xuICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICBsaW5rOmRhdGEubGluayxcbiAgICBpZDpkYXRhLl9pZCxcbiAgICBvd25lcjpkYXRhLm93bmVyLFxuICAgIGxpa2VzOmRhdGEubGlrZXMsXG4gICAgdGVtcGxhdGU6Y2FyZFRlbXBsYXRlLFxuICAgIHVzZXI6ZGF0YS51c2VyLFxuICAgIGltYWdlT3BlbmVyOihldnQpPT57bGlnaHRib3gub3BlbihldnQpfSxcbiAgICBlcmFzZXJPcGVuZXI6KGV2dCk9Pntjb25maXJtRXJhc2Uub3BlbihldnQpfSxcbiAgICBoYW5kbGVMaWtlOihldnQpPT57aGFuZGxlTGlrZShldnQpfSxcbiAgICBoYW5kbGVEaXNsaWtlOihldnQpPT57aGFuZGxlRGlzbGlrZShldnQpfVxuICB9KVxuICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQuY3JlYXRlQ2FyZEVsZW1lbnQoKTtcbiAgcmV0dXJuIGNhcmRFbGVtZW50O1xufVxuXG5leHBvcnQgY29uc3QgbGlnaHRib3ggPSBuZXcgUG9wdXBXaXRoSW1hZ2UgKFwicG9wdXBcIik7XG5cbmV4cG9ydCBjb25zdCBhZGRDYXJkRm9ybSA9IG5ldyBQb3B1cFdpdGhGb3JtIChcImdhbGxlcnlcIiwgaGFuZGxlU3VibWl0Q2FyZCk7XG5cbmV4cG9ydCBjb25zdCBwcm9maWxlRm9ybUVkaXQgPSBuZXcgUG9wdXBXaXRoRm9ybSAoXCJlZGl0XCIsIGhhbmRsZVN1Ym1pdFByb2ZpbGUpO1xuXG5leHBvcnQgY29uc3QgYXZhdGFyRm9ybUVkaXQgPSBuZXcgUG9wdXBXaXRoRm9ybSAoXCJhdmF0YXJcIiwgaGFuZGxlU3VibWl0QXZhdGFyKTtcblxuZXhwb3J0IGNvbnN0IGNvbmZpcm1FcmFzZSA9IG5ldyBQb3B1cFdpdGhGb3JtIChcImVyYXNlclwiLCBoYW5kbGVFcmFzZSk7XG5cbmV4cG9ydCBjb25zdCB1c2VyUHJvZmlsZSA9IG5ldyBVc2VySW5mbyAocGVyc29uLnRleHRDb250ZW50LCBkZXNjLnRleHRDb250ZW50KTtcblxuKGZ1bmN0aW9uIGRvY3VtZW50RXZlbnRMaXN0ZW5lcnMgKCkge1xuICBlZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KT0+e1xuICAgIGNvbnN0IHVzZXJJbmZvID0gdXNlclByb2ZpbGUuZ2V0VXNlckluZm8oKTtcbiAgICAvL2NvbnN0IGJ1dHRvbiA9IGV2dC50YXJnZXQuaWQ7XG4gICAgbmV3TmFtZS52YWx1ZSA9IHVzZXJJbmZvLm5hbWU7XG4gICAgbmV3RGVzYy52YWx1ZSA9IHVzZXJJbmZvLmpvYjtcbiAgICBmb3JtVmFsaWRhdG9yc1snZWRpdCddLnJlc2V0VmFsaWRhdGlvbigpO1xuICAgIHByb2ZpbGVGb3JtRWRpdC5vcGVuKGV2dCk7XG4gIH0pO1xuXG4gIGF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCk9PntcbiAgICAvL2NvbnN0IGJ1dHRvbiA9IGV2dC50YXJnZXQuaWQ7XG4gICAgZm9ybVZhbGlkYXRvcnNbJ2F2YXRhciddLnJlc2V0VmFsaWRhdGlvbigpO1xuICAgIGF2YXRhckZvcm1FZGl0Lm9wZW4oZXZ0KTtcbiAgfSlcblxuICBhZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpPT57XG4gICAgLy9jb25zdCBidXR0b24gPSBldnQudGFyZ2V0LmlkO1xuICAgIGZvcm1WYWxpZGF0b3JzWydnYWxsZXJ5J10ucmVzZXRWYWxpZGF0aW9uKCk7XG4gICAgYWRkQ2FyZEZvcm0ub3BlbihldnQpO1xuICB9KTtcbn0pKCk7Il0sIm5hbWVzIjpbIkFwaSIsImJhc2VVcmwiLCJoZWFkZXJzIiwidGhpcyIsImF1dGgiLCJhdXRob3JpemF0aW9uIiwiZmV0Y2giLCJ0aGVuIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJuYW1lIiwiYWJvdXQiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImxpbmsiLCJhdmF0YXIiLCJjYXJkSWQiLCJDYXJkIiwiaWQiLCJvd25lciIsImxpa2VzIiwidGVtcGxhdGUiLCJ1c2VyIiwiaW1hZ2VPcGVuZXIiLCJlcmFzZXJPcGVuZXIiLCJoYW5kbGVMaWtlIiwiaGFuZGxlRGlzbGlrZSIsImV2dCIsIl9saWtlQnV0dG9uIiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJ0ZXh0Q29udGVudCIsImxpa2VzQW1vdW50IiwicmVtb3ZlIiwiYWRkIiwibmV3TGlrZXNBbW91bnQiLCJfb3duZXJJZCIsIl9pZCIsImxlbmd0aCIsIl9jYXJkRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjbG9uZU5vZGUiLCJfY2FyZEltYWdlIiwibGlrZUNvdW50ZXIiLCJlcmFzZUJ0biIsImxpa2VCdG4iLCJhbHQiLCJzcmMiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfaGFzTGlrZWQiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJkaXNhYmxlZCIsInNvbWUiLCJlIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9saWtlVGhlQ2FyZCIsInNlbGVjdGVkQ2FyZCIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtIiwic2V0dGluZ3MiLCJfZm9ybSIsIl9zZXR0aW5ncyIsIl9zdWJtaXRCdXR0b24iLCJzdWJtaXRCdXR0b24iLCJfc3VibWl0QnV0dG9uRGlzYWJsZWQiLCJzdWJtaXRCdXR0b25EaXNhYmxlZCIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2Vycm9yU2VsZWN0b3IiLCJlcnJvckFyZWEiLCJfZXJyb3JBY3RpdmUiLCJlcnJvckFjdGl2ZSIsInByZXZlbnREZWZhdWx0IiwiZm9yRWFjaCIsImlucHV0RWxlbWVudCIsIl9oaWRlRXJyb3IiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX2hhc0ludmFsaWRJbnB1dCIsInZhbGlkaXR5IiwidmFsaWQiLCJfc2hvd0Vycm9yIiwiZm9ybUVycm9yU3BhbiIsInZhbGlkYXRpb25NZXNzYWdlIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX2NvbnRhaW5lciIsImRvY3VtZW50Iiwic2VsZWN0b3IiLCJjbG9zZUJ1dHRvbiIsIm92ZXJsYXkiLCJzZXRFdmVudExpc3RlbmVycyIsIl9oYW5kbGVFc2NDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJlc2NQcmVzc2VkIiwia2V5IiwiY2xvc2UiLCJiaW5kIiwiUG9wdXBXaXRoRm9ybSIsImNhbGxiYWNrIiwic3VibWl0QnV0dG9uVGV4dCIsImxvYWRpbmdUZXh0IiwiX2lucHV0RmllbGRzIiwic2VsZWN0ZWQiLCJyZXNldCIsImJ1dHRvbiIsImNsb3Nlc3QiLCJsb2FkaW5nIiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRWYWx1ZXMiLCJmaWVsZCIsInZhbHVlIiwiUG9wdXBXaXRoSW1hZ2UiLCJpbWFnZSIsInRleHQiLCJnZXRBdHRyaWJ1dGUiLCJVc2VySW5mbyIsImpvYiIsImF2YXRhckxvY2F0aW9uIiwibmFtZUxvY2F0aW9uIiwiam9iTG9jYXRpb24iLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJkYXRhIiwicmVuZGVyZXIiLCJfcmVuZGVyZWRJdGVtcyIsIl9yZW5kZXJlciIsImVsZW1lbnQiLCJwcmVwZW5kIiwiaW5uZXJIVE1MIiwiaXRlbSIsImVkaXRCdXR0b24iLCJhZGRCdXR0b24iLCJhdmF0YXJCdXR0b24iLCJuZXdOYW1lIiwibmV3RGVzYyIsInBlcnNvbiIsImRlc2MiLCJjYXJkVGVtcGxhdGUiLCJjb250ZW50IiwiYXBpIiwiaW5pdGlhbENhcmQiLCJhbGwiLCJnZXRVc2VySW5mbyIsImdldEluaXRpYWxDYXJkcyIsImNhcmRzIiwidXNlclByb2ZpbGUiLCJzZXRBdmF0YXIiLCJzZXRVc2VySW5mbyIsImNhcmRFbGVtZW50IiwiY3JlYXRlQ2FyZCIsInNldEl0ZW0iLCJyZW5kZXJJdGVtcyIsImZvcm1WYWxpZGF0b3JzIiwiZm9ybUVsZW1lbnQiLCJ2YWxpZGF0b3IiLCJmb3JtTmFtZSIsImVuYWJsZVZhbGlkYXRpb24iLCJjYXJkIiwibGlnaHRib3giLCJvcGVuIiwiY29uZmlybUVyYXNlIiwicG9zdExpa2VzIiwiZGVsZXRlTGlrZXMiLCJjcmVhdGVDYXJkRWxlbWVudCIsImFkZENhcmRGb3JtIiwiaW5mbyIsInBvc3RDYXJkIiwic2V0VGltZW91dCIsInByb2ZpbGVGb3JtRWRpdCIsInBvc3RVc2VySW5mbyIsInJlc2V0VmFsaWRhdGlvbiIsImF2YXRhckZvcm1FZGl0IiwicG9zdFVzZXJBdmF0YXIiLCJkZWxldGVDYXJkIiwiX2VyYXNlVGhlQ2FyZCIsInVzZXJJbmZvIl0sInNvdXJjZVJvb3QiOiIifQ==